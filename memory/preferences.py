import json
import os

class Preferences:
    def __init__(self, path="data/preferences.json"):
        """
        –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î –æ–± º—î–∫—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—Ü—å–∫–∏—Ö –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å.
        :param path: —à–ª—è—Ö –¥–æ JSON-—Ñ–∞–π–ª—É –∑ –≤–ø–æ–¥–æ–±–∞–Ω–Ω—è–º–∏
        """
        self.path = path
        self.defaults = {
            "name": "–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á",
            "language": "uk",
            "voice": "default",
            "mode": "normal",  # –∞–±–æ "developer"
            "response_style": "detailed",  # –∞–±–æ "concise"
            "wake_word": "antony",
            "auto_listen": False
        }
        self.data = self._load()

    def _load(self):
        """–ó–∞–≤–∞–Ω—Ç–∞–∂—É—î –≤–ø–æ–¥–æ–±–∞–Ω–Ω—è –∑ —Ñ–∞–π–ª—É –∞–±–æ —Å—Ç–≤–æ—Ä—é—î —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ñ."""
        if not os.path.exists(self.path):
            self._save(self.defaults)
            return self.defaults.copy()
        try:
            with open(self.path, "r", encoding="utf-8") as f:
                prefs = json.load(f)
                # –∞–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö –∫–ª—é—á—ñ–≤
                for key in self.defaults:
                    prefs.setdefault(key, self.defaults[key])
                return prefs
        except Exception:
            return self.defaults.copy()

    def _save(self, prefs):
        """–ó–±–µ—Ä—ñ–≥–∞—î –≤–ø–æ–¥–æ–±–∞–Ω–Ω—è –¥–æ JSON."""
        with open(self.path, "w", encoding="utf-8") as f:
            json.dump(prefs, f, indent=4, ensure_ascii=False)

    def get(self, key):
        """–û—Ç—Ä–∏–º–∞—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∫–ª—é—á–µ–º."""
        return self.data.get(key, self.defaults.get(key))

    def set(self, key, value):
        """–û–Ω–æ–≤–∏—Ç–∏ –∑–Ω–∞—á–µ–Ω–Ω—è —ñ –∑–±–µ—Ä–µ–≥—Ç–∏."""
        self.data[key] = value
        self._save(self.data)

    def reset(self):
        """–°–∫–∏–Ω—É—Ç–∏ –≤—Å—ñ –≤–ø–æ–¥–æ–±–∞–Ω–Ω—è –¥–æ –¥–µ—Ñ–æ–ª—Ç–Ω–∏—Ö."""
        self.data = self.defaults.copy()
        self._save(self.data)

    def all(self):
        """–û—Ç—Ä–∏–º–∞—Ç–∏ –≤—Å—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è."""
        return self.data.copy()

    def __str__(self):
        """–°—Ç–∏–ª—å–Ω–µ –≤–∏–≤–µ–¥–µ–Ω–Ω—è –≤–ø–æ–¥–æ–±–∞–Ω—å."""
        return "\n".join([f"üîß {k}: {v}" for k, v in self.data.items()])