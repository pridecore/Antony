import json
import os
from cryptography.fernet import Fernet

class SecureVault:
    def __init__(self, filepath: str, key: str = None):
        """
        –ö–ª–∞—Å –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ç–∞ —á–∏—Ç–∞–Ω–Ω—è –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—Ö –¥–∞–Ω–∏—Ö —É JSON-—Ñ–∞–π–ª—ñ.
        
        :param filepath: —à–ª—è—Ö –¥–æ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–æ–≥–æ JSON-—Ñ–∞–π–ª—É
        :param key: –∫–ª—é—á —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è (base64 —Ä—è–¥–æ–∫); —è–∫—â–æ None ‚Äî –±–µ—Ä–µ—Ç—å—Å—è –∑ .env
        """
        self.filepath = filepath
        self.key = key or os.getenv("VAULT_KEY")

        if not self.key:
            raise ValueError("üîê –ö–ª—é—á —à–∏—Ñ—Ä—É–≤–∞–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤–∏ VAULT_KEY —É .env")

        # –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è, —â–æ –∫–ª—é—á —É —Ñ–æ—Ä–º–∞—Ç—ñ –±–∞–π—Ç—ñ–≤
        if isinstance(self.key, str):
            self.key = self.key.encode()

        self.fernet = Fernet(self.key)

    def save(self, data):
        """
        –®–∏—Ñ—Ä—É—î —ñ –∑–±–µ—Ä—ñ–≥–∞—î –¥–∞–Ω—ñ —É —Ñ–∞–π–ª.
        
        :param data: Python-–æ–± º—î–∫—Ç, —â–æ –±—É–¥–µ –∫–æ–Ω–≤–µ—Ä—Ç–æ–≤–∞–Ω–∏–π —É JSON —ñ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–π
        """
        try:
            raw = json.dumps(data, indent=2, ensure_ascii=False).encode("utf-8")
            encrypted = self.fernet.encrypt(raw)
            with open(self.filepath, "wb") as f:
                f.write(encrypted)
        except Exception as e:
            print(f"[SecureVault] –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—ñ: {e}")

    def load(self):
        """
        –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î —ñ —Ä–æ–∑—à–∏—Ñ—Ä–æ–≤—É—î –¥–∞–Ω—ñ –∑ —Ñ–∞–π–ª—É.
        
        :return: Python-–æ–± º—î–∫—Ç (—Å–ø–∏—Å–æ–∫, —Å–ª–æ–≤–Ω–∏–∫ —Ç–æ—â–æ), –∞–±–æ –ø—É—Å—Ç–∏–π —Å–ø–∏—Å–æ–∫, —è–∫—â–æ —Ñ–∞–π–ª –≤—ñ–¥—Å—É—Ç–Ω—ñ–π —á–∏ –ø–æ—à–∫–æ–¥–∂–µ–Ω–∏–π
        """
        if not os.path.exists(self.filepath):
            # –Ø–∫—â–æ —Ñ–∞–π–ª—É –Ω–µ–º–∞—î, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π —Å–ø–∏—Å–æ–∫ (–ø–∞–º º—è—Ç—å –ø—É—Å—Ç–∞)
            return []

        try:
            with open(self.filepath, "rb") as f:
                encrypted = f.read()
            if not encrypted:
                # –ü–æ—Ä–æ–∂–Ω—ñ–π —Ñ–∞–π–ª, –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ–π —Å–ø–∏—Å–æ–∫
                return []
            decrypted = self.fernet.decrypt(encrypted)
            return json.loads(decrypted.decode("utf-8"))
        except Exception as e:
            print(f"[SecureVault] –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑—á–∏—Ç—É–≤–∞–Ω–Ω—ñ: {e}")
            # –£ –≤–∏–ø–∞–¥–∫—É –ø–æ–º–∏–ª–∫–∏ ‚Äî –Ω–µ –ø–∞–¥–∞—î–º–æ, –∞ –ø–æ–≤–µ—Ä—Ç–∞—î–º–æ –ø—É—Å—Ç–∏–π —Å–ø–∏—Å–æ–∫
            return []